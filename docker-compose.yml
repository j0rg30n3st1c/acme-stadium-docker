version: '3.8'

services:

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - alineaciones-partido
      - entradas-restantes
      - lista-partidos
      - mapa-entradas-restantes
      - parking-mapa-sitios-restantes
      - parking-sitios-restantes
    networks:
      - proxy_network
      - web_network

  nginx-proxy:
    image: nginx:stable-alpine3.17
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./cert_data:/cert_data
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - cert-generator
    networks:
      - proxy_network
      - cert_data_network

  cert-generator:
    image: ubuntu:22.04
    volumes:
      - ./certbot/generate-cert.sh:/generate-cert.sh
      - ./cert_data:/cert_data
    command: sh /generate-cert.sh
    networks:
      - cert_data_network

  alineaciones-partido:
    image: python:alpine3.19
    volumes:
        - ./python/alineaciones_partido.py:/app/alineaciones_partido.py
    command: [python, -u,"/app/alineaciones_partido.py"]
    networks:
      - web_network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
    networks:
      - producer_payments_network
      - consumer_payments_network

  producer:
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq-producer/Dockerfile
    depends_on:
      - rabbitmq
    networks:
      - pasarela_pago_network
      - producer_payments_network

  consumer:
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq-consumer/Dockerfile
    volumes:
      - ./rabbitmq/rabbitmq-consumer/consumer.py:/app/app.py
    depends_on:
      - rabbitmq
      - api_transferencia
      - api_tarjeta
      - api_bizum
      - api_paypal
    networks:
      - consumer_payments_network
      - do_payments_network

  api_descarga:
    image: openjdk:23-oracle
    volumes:
      - ./java/api_descarga.java:/code/api_descarga.java
    working_dir: /code
    command: ["java", "api_descarga.java"]
    networks:
      - sending_tickets_network

  api_email:
    image: openjdk:23-oracle
    volumes:
      - ./java/api_email.java:/code/api_email.java
    working_dir: /code
    command: ["java", "api_email.java"]
    networks:
      - sending_tickets_network

  api_wallet:
    image: openjdk:23-oracle
    volumes:
      - ./java/api_wallet.java:/code/api_wallet.java
    working_dir: /code
    command: ["java", "api_wallet.java"]
    networks:
      - sending_tickets_network

  qr:
    image: openjdk:23-oracle
    volumes:
      - ./java/qr.java:/code/qr.java
    working_dir: /code
    command: ["java", "qr.java"]

  validacion:
    image: openjdk:23-oracle
    volumes:
      - ./java/validacion.java:/code/validacion.java
    working_dir: /code
    command: ["java", "validacion.java"]

  entradas-restantes:
    image: python:alpine3.19
    volumes:
        - ./python/entradas_restantes.py:/app/entradas_restantes.py
    command: [python, -u,"/app/entradas_restantes.py"]
    depends_on:
      - database-entradas
      - api_descarga
      - api_email
      - api_wallet
      - producer
    networks:
      - ticketing_network
      - web_network
      - sending_tickets_network
      - pasarela_pago_network

  lista-partidos:
    image: python:alpine3.19
    volumes:
        - ./python/lista_partidos.py:/app/lista_partidos.py
    command: [python, -u,"/app/lista_partidos.py"]
    networks:
      - web_network

  mapa-entradas-restantes:
    image: python:alpine3.19
    volumes:
        - ./python/mapa_entradas_restantes.py:/app/mapa_entradas_restantes.py
    command: [python, -u,"/app/mapa_entradas_restantes.py"]
    depends_on:
      - database-entradas
    networks:
      - ticketing_network
      - web_network
      - sending_tickets_network

  parking-mapa-sitios-restantes:
    image: python:alpine3.19
    volumes:
        - ./python/parking_mapa_sitios_restantes.py:/app/parking_mapa_sitios_restantes.py
    command: [python, -u,"/app/parking_mapa_sitios_restantes.py"]
    networks:
      - web_network
      - sending_tickets_network

  parking-sitios-restantes:
    image: python:alpine3.19
    volumes:
        - ./python/parking_sitios_restantes.py:/app/parking_sitios_restantes.py
    command: [python, -u,"/app/parking_sitios_restantes.py"]
    depends_on:
      - api_descarga
      - api_email
      - api_wallet
      - producer
    networks:
      - web_network
      - sending_tickets_network
      - pasarela_pago_network

  database-entradas:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./mysql_data:/var/lib/mysql
    networks:
      - ticketing_network

  database-entradas-slave:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./mysql_data_slave:/var/lib/mysql
    networks:
      - ticketing_network

  api_bizum:
    build:
      context: .
      dockerfile: pasarela_pago/Dockerfile
    command: ["./main", "bizum"]
    networks:
      - do_payments_network

  api_paypal:
    build:
      context: .
      dockerfile: pasarela_pago/Dockerfile
    command: ["./main", "paypal"]
    networks:
      - do_payments_network

  api_tarjeta:
    build:
      context: .
      dockerfile: pasarela_pago/Dockerfile
    command: ["./main", "tarjeta"]
    networks:
      - do_payments_network

  api_transferencia:
    build:
      context: .
      dockerfile: pasarela_pago/Dockerfile
    command: ["./main", "transferencia"]
    networks:
      - do_payments_network

networks:
  ticketing_network:
    driver: bridge
  proxy_network:
    driver: bridge
  cert_data_network:
    driver: bridge
  web_network:
    driver: bridge
  sending_tickets_network:
    driver: bridge
  pasarela_pago_network:
    driver: bridge
  producer_payments_network:
    driver: bridge
  consumer_payments_network:
    driver: bridge
  do_payments_network:
    driver: bridge